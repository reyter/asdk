#include "StdAfx.h"
#include "Authentication.h"
#include "Common\Log.h"
#include "Connenct\ProxyOption.h"
#include "Connenct\ShortSocket.h"
#include "Connenct\DataComm.h"
#include "Common\CommonFunc.h"
#include "Connenct\data_struct.h"
#include "Common\StringUtil.h"


CAuthentication::CAuthentication(void)
{
}

CAuthentication::~CAuthentication(void)
{
}

DWORD CAuthentication::Login( const CServer authsvr,const CString& strAccount,const CString& strPwd )
{
	if (authsvr.m_strIPAddress.IsEmpty()||
		strAccount.IsEmpty()||
		strPwd.IsEmpty())
	{
		g_Log.LOG_WARNING(L"auth param error");
		return RETVAL_ERROR;
	}

	g_Log.LOG_INFO(L"begin connect to auth server ip:%s,port:%d",authsvr.m_strIPAddress,authsvr.m_dwPort);

	char *pRecv = (char *)malloc(1024 * 1024);
	char *pSend = (char *)malloc(1024);
	if (NULL == pRecv || NULL == pSend)
	{
		__FREE_OBJECT(pRecv);
		__FREE_OBJECT(pSend);
		return RETVAL_ERROR;
	}

	//构造登录请求报文
	tagUserLogReq reqUserLoginData;
	reqUserLoginData.nEncrypt = 0;
	strncpy(reqUserLoginData.acCode,ToCStringA(strAccount).GetBuffer(0),64);
	strncpy(reqUserLoginData.acPass,ToCStringA(strPwd).GetBuffer(0),64);

	//拼接请求报文
	CDataComm DataComm;
	int nLen = DataComm.MakeNormalReq(pSend,3119,(char *)&reqUserLoginData,sizeof(tagUserLogReq));



	//发送登录请求

	//检查服务器返回的验证结果	

	//向界面返回认证结果

	__FREE_OBJECT(pRecv);
	__FREE_OBJECT(pSend);

	return RETVAL_SUCCESS;
}

DWORD CAuthentication::Logout( void )
{
	return RETVAL_SUCCESS;
}